{"version":3,"sources":["webpack:///./src/components/postList.js","webpack:///./src/templates/postListView.js"],"names":["PostList","postData","className","map","post","i","node","frontmatter","key","PostListView","data","pageContext","categoryOrTag","category","tag","allMarkdownRemark","edges","filter","tags","split","includes","title","site","siteMetadata","pageQuery"],"mappings":"qKAUe,SAASA,EAAT,GAAiC,IAAbC,EAAY,EAAZA,SACjC,OAAO,yBAAKC,UAAU,uBAAkCD,EAN5CE,KAAI,SAACC,EAAMC,GACrB,OAAO,kBAAC,IAAD,CAAUD,KAAMA,EAAKE,KAAKC,YAAaC,IAAG,aAAeH,Q,4BCCrD,SAASI,EAAT,GAA8C,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,YACrCC,EAAgBD,EAAYE,UAAYF,EAAYG,IACpDb,EAAWS,EAAKK,kBAAkBC,MAAMC,QAC5C,SAAAX,GAAI,OACFA,EAAKA,KAAKC,YAAYM,WAAaD,GACH,OAA/BN,EAAKA,KAAKC,YAAYW,MACrBZ,EAAKA,KAAKC,YAAYW,KAAKC,MAAM,MAAMC,SAASR,MAEtD,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKS,MAAOX,EAAKY,KAAKC,aAAaF,QACnC,kBAACrB,EAAD,CAAUC,SAAUA,K,kFAKnB,IAAMuB,EAAS","file":"component---src-templates-post-list-view-js-6457fcd6814fc02cbe23.js","sourcesContent":["import React from 'react';\n\nimport PostLink from './postLink';\n\nconst renderPost = data => {\n  return data.map((post, i) => {\n    return <PostLink post={post.node.frontmatter} key={`post-link-${i}`} />;\n  });\n};\n\nexport default function PostList({ postData }) {\n  return <div className=\"post-list-container\">{renderPost(postData)}</div>;\n}\n","import React from 'react';\nimport { graphql } from 'gatsby';\n\nimport PostList from '../components/postList';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nexport default function PostListView({ data, pageContext }) {\n  const categoryOrTag = pageContext.category || pageContext.tag;\n  const postData = data.allMarkdownRemark.edges.filter(\n    node =>\n      node.node.frontmatter.category === categoryOrTag ||\n      (node.node.frontmatter.tags !== null &&\n        node.node.frontmatter.tags.split(', ').includes(categoryOrTag))\n  );\n  return (\n    <Layout>\n      <SEO title={data.site.siteMetadata.title} />\n      <PostList postData={postData} />\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          frontmatter {\n            title\n            date(formatString: \"YYYY-MM-DD\")\n            path\n            tags\n            category\n          }\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}